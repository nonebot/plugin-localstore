[tool.poetry]
name = "nonebot-plugin-localstore"
version = "0.7.0"
description = "Local Storage Support for NoneBot2"
authors = ["yanyongyu <yyy@nonebot.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/nonebot/plugin-localstore"
repository = "https://github.com/nonebot/plugin-localstore"
documentation = "https://github.com/nonebot/plugin-localstore#readme"
keywords = ["nonebot2", "qq", "plugin"]

[tool.poetry.dependencies]
python = "^3.9"
nonebot2 = "^2.2.0"
typing-extensions = "^4.0.0"
pydantic = ">=1.10.0,<3.0.0,!=2.5.0,!=2.5.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.0"
isort = "^5.10.1"
black = "^24.0.0"
nonemoji = "^0.1.2"
pre-commit = "^3.5.0"

[tool.poetry.plugins.nb_scripts]
localstore = "nonebot_plugin_localstore.script:main"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 88
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.per-file-ignores]
"nonebot_plugin_localstore/script.py" = ["T201"]
"nonebot_plugin_localstore/utils.py" = ["T201"]

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"

typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
